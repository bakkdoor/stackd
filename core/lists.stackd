in: core.lists ;

: reduce ! ( seq identity quot -- result )
    swapd each ;

: ++ ! ( seq1 seq2 -- newseq )
    append ;

: append ! ( seq1 seq2 -- newseq )
    + ;

: 3append ! ( seq1 seq2 seq3 -- newseq )
    append append ;

! Applies quot to each element in seq in turn,
! also invoking between in-between each pair of elements.
! e.g. #("a" "b" "c") [ "X" print- ] [ print- ] interleave -> aXbXc
: interleave ! ( seq between quot -- )
    pick empty?
    [ 3drop ]
    [
        pick [ swap dup swapd call over call ] each ! need to fix this - almost done though :)
    ] if ;

! e.g. "foo" "(" ")" 3append -> "(foo)"
: surround ! ( seq1 seq2 seq3 -- newseq )
    swapd 3append ;

! e.g. "a" "b" "," glue -> "a,b"
: glue ! ( seq1 seq2 seq3 -- newseq )
    swap 3append ;

! e.g. "abcdefg" "-" join -> "a-b-c-d-e-f-g"
! : join ! ( seq glue -- newseq )
!    ;